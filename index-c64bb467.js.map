{"version":3,"file":"index-c64bb467.js","sources":["../src/utils/routes.js","../src/components/PortfolioApp.js"],"sourcesContent":["/**\r\n * Application route constants\r\n * \r\n * Centralizes all route definitions for easier maintenance\r\n */\r\nexport const ROUTES = {\r\n  HOME: 'home',\r\n  PROJECTS: 'projects',\r\n  ABOUT: 'about',\r\n  CONTACT: 'contact',\r\n};\r\n\r\nexport const DEFAULT_ROUTE = ROUTES.HOME; ","import { LitElement, html } from 'lit';\r\nimport { LionButton } from '@lion/ui/button.js';\r\nimport { ROUTES, DEFAULT_ROUTE } from '../utils/routes.js';\r\n\r\n/**\r\n * Main application component that handles routing and layout\r\n * \r\n * @property {String} currentPage - The currently active page/route\r\n */\r\nexport class PortfolioApp extends LitElement {\r\n  static properties = {\r\n    currentPage: { type: String }\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.currentPage = DEFAULT_ROUTE;\r\n    this._setupRouting();\r\n  }\r\n\r\n  /**\r\n   * Setup hash-based routing\r\n   * Enables bookmarkable URLs and browser navigation\r\n   */\r\n  _setupRouting() {\r\n    // Handle initial route from URL hash\r\n    this._handleHashChange();\r\n    \r\n    // Listen for hash changes\r\n    window.addEventListener('hashchange', () => this._handleHashChange());\r\n  }\r\n\r\n  /**\r\n   * Process URL hash and update current page\r\n   */\r\n  _handleHashChange() {\r\n    // Get current hash without the # symbol\r\n    const hash = window.location.hash.substring(1);\r\n    \r\n    // Check if hash corresponds to a valid route\r\n    if (hash && Object.values(ROUTES).includes(hash)) {\r\n      this.currentPage = hash;\r\n    } else if (!hash && window.location.hash === '') {\r\n      // If no hash, set to default route\r\n      this.currentPage = DEFAULT_ROUTE;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Navigate to a specific route\r\n   * @param {String} route - The route to navigate to\r\n   */\r\n  _navigateTo(route) {\r\n    window.location.hash = route;\r\n  }\r\n\r\n  // Remove shadow DOM to allow Tailwind styles to apply\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"min-h-screen bg-gray-900 text-white flex flex-col\">\r\n        ${this._renderHeader()}\r\n        <main class=\"flex-1 p-6 max-w-7xl mx-auto w-full\">\r\n          ${this._renderPage()}\r\n        </main>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  _renderHeader() {\r\n    return html`\r\n      <header class=\"bg-gray-800 shadow-md p-4\">\r\n        <nav class=\"max-w-7xl mx-auto px-4 flex justify-between items-center\">\r\n          <h1 class=\"text-2xl font-bold tracking-tight text-white\">Max Larionov</h1>\r\n          <div class=\"flex gap-2\">\r\n            ${this._renderNavButton(ROUTES.HOME, 'Home')}\r\n            ${this._renderNavButton(ROUTES.PROJECTS, 'Projects')}\r\n            ${this._renderNavButton(ROUTES.ABOUT, 'About')}\r\n            ${this._renderNavButton(ROUTES.CONTACT, 'Contact')}\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * Render a navigation button with active state handling\r\n   * @param {String} route - The route this button navigates to\r\n   * @param {String} label - The button label\r\n   * @returns {TemplateResult}\r\n   */\r\n  _renderNavButton(route, label) {\r\n    const isActive = this.currentPage === route;\r\n    const baseClasses = 'px-4 py-2 text-white rounded transition-colors';\r\n    const bgClasses = isActive \r\n      ? 'bg-blue-600 hover:bg-blue-500' \r\n      : 'bg-gray-700 hover:bg-gray-600';\r\n    \r\n    return html`\r\n      <lion-button \r\n        class=\"${baseClasses} ${bgClasses}\" \r\n        @click=${() => this._navigateTo(route)}>\r\n        ${label}\r\n      </lion-button>\r\n    `;\r\n  }\r\n\r\n  _renderPage() {\r\n    switch (this.currentPage) {\r\n      case ROUTES.HOME:\r\n        return html`<home-page></home-page>`;\r\n      case ROUTES.PROJECTS:\r\n        return html`<projects-page></projects-page>`;\r\n      case ROUTES.ABOUT:\r\n        return html`<about-page></about-page>`;\r\n      case ROUTES.CONTACT:\r\n        return html`<contact-page></contact-page>`;\r\n      default:\r\n        return html`<home-page></home-page>`;\r\n    }\r\n  }\r\n}\r\n\r\ncustomElements.define('portfolio-app', PortfolioApp); "],"names":["ROUTES","HOME","PROJECTS","ABOUT","CONTACT","DEFAULT_ROUTE","customElements","define","PortfolioApp","LitElement","static","currentPage","type","String","constructor","super","this","_setupRouting","_handleHashChange","window","addEventListener","hash","location","substring","Object","values","includes","_navigateTo","route","createRenderRoot","render","html","_renderHeader","_renderPage","_renderNavButton","label","isActive"],"mappings":"0FAKO,MAAMA,EAAS,CACpBC,KAAM,OACNC,SAAU,WACVC,MAAO,QACPC,QAAS,WAGEC,EAAgBL,EAAOC,KCkHpCK,eAAeC,OAAO,gBArHf,MAAMC,qBAAqBC,EAChCC,kBAAoB,CAClBC,YAAa,CAAEC,KAAMC,SAGvB,WAAAC,GACEC,QACAC,KAAKL,YAAcN,EACnBW,KAAKC,eACN,CAMD,aAAAA,GAEED,KAAKE,oBAGLC,OAAOC,iBAAiB,cAAc,IAAMJ,KAAKE,qBAClD,CAKD,iBAAAA,GAEE,MAAMG,EAAOF,OAAOG,SAASD,KAAKE,UAAU,GAGxCF,GAAQG,OAAOC,OAAOzB,GAAQ0B,SAASL,GACzCL,KAAKL,YAAcU,EACTA,GAAiC,KAAzBF,OAAOG,SAASD,OAElCL,KAAKL,YAAcN,EAEtB,CAMD,WAAAsB,CAAYC,GACVT,OAAOG,SAASD,KAAOO,CACxB,CAGD,gBAAAC,GACE,OAAOb,IACR,CAED,MAAAc,GACE,OAAOC,CAAI;;UAELf,KAAKgB;;YAEHhB,KAAKiB;;;KAId,CAED,aAAAD,GACE,OAAOD,CAAI;;;;;cAKDf,KAAKkB,iBAAiBlC,EAAOC,KAAM;cACnCe,KAAKkB,iBAAiBlC,EAAOE,SAAU;cACvCc,KAAKkB,iBAAiBlC,EAAOG,MAAO;cACpCa,KAAKkB,iBAAiBlC,EAAOI,QAAS;;;;KAKjD,CAQD,gBAAA8B,CAAiBN,EAAOO,GACtB,MAAMC,EAAWpB,KAAKL,cAAgBiB,EAMtC,OAAOG,CAAI;;iBALS,oDACFK,EACd,gCACA;iBAKS,IAAMpB,KAAKW,YAAYC;UAC9BO;;KAGP,CAED,WAAAF,GACE,OAAQjB,KAAKL,aACX,KAAKX,EAAOC,KACV,OAAO8B,CAAI,0BACb,KAAK/B,EAAOE,SACV,OAAO6B,CAAI,kCACb,KAAK/B,EAAOG,MACV,OAAO4B,CAAI,4BACb,KAAK/B,EAAOI,QACV,OAAO2B,CAAI,gCACb,QACE,OAAOA,CAAI,0BAEhB"}